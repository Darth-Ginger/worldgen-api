{
    "components": {
        "schemas": {
            "Era": {
                "properties": {
                    "periods": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Period"
                                }
                            ],
                            "description": "Information about a period in the era",
                            "title": "Period"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EraUpdate": {
                "properties": {
                    "periods": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Period"
                                }
                            ],
                            "description": "Information about a period in the era",
                            "title": "Period"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Geography": {
                "properties": {
                    "balance": {
                        "description": "Balance of the world",
                        "title": "Balance",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the world",
                        "title": "Description",
                        "type": "string"
                    },
                    "landmarks": {
                        "additionalProperties": {
                            "description": "Landmark of the world",
                            "title": "Landmark",
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "size": {
                        "description": "Size of the world",
                        "title": "Size",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GeographyUpdate": {
                "properties": {
                    "balance": {
                        "description": "Balance of the world",
                        "title": "Balance",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the world",
                        "title": "Description",
                        "type": "string"
                    },
                    "landmarks": {
                        "additionalProperties": {
                            "description": "Landmark of the world",
                            "title": "Landmark",
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "size": {
                        "description": "Size of the world",
                        "title": "Size",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "God": {
                "properties": {
                    "domain": {
                        "description": "Comma separated list of domains of the god",
                        "title": "Domain",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the god",
                        "title": "Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Group": {
                "properties": {
                    "agenda": {
                        "description": "Agenda of the group",
                        "enum": [
                            "Political",
                            "Military",
                            "Religious"
                        ],
                        "title": "Agenda",
                        "type": "string"
                    },
                    "goal": {
                        "description": "Goal of the group",
                        "enum": [
                            "Power",
                            "Wealth",
                            "Control"
                        ],
                        "title": "Goal",
                        "type": "string"
                    },
                    "kingdom_properties": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/KindomProperty"
                            }
                        ],
                        "description": "Kingdom properties of the group",
                        "title": "Kingdom Properties"
                    },
                    "leadership": {
                        "description": "Leadership of the group",
                        "title": "Leadership",
                        "type": "string"
                    },
                    "relationships": {
                        "items": {
                            "description": "Name of the relationship",
                            "title": "Relation",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "short_name": {
                        "description": "Short name of the group",
                        "title": "Short Name",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the group",
                        "enum": [
                            "Kingdom",
                            "Faction"
                        ],
                        "title": "Type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupUpdate": {
                "properties": {
                    "agenda": {
                        "description": "Agenda of the group",
                        "enum": [
                            "Political",
                            "Military",
                            "Religious"
                        ],
                        "title": "Agenda",
                        "type": "string"
                    },
                    "goal": {
                        "description": "Goal of the group",
                        "enum": [
                            "Power",
                            "Wealth",
                            "Control"
                        ],
                        "title": "Goal",
                        "type": "string"
                    },
                    "kingdom_properties": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/KindomProperty"
                            }
                        ],
                        "description": "Kingdom properties of the group",
                        "title": "Kingdom Properties"
                    },
                    "leadership": {
                        "description": "Leadership of the group",
                        "title": "Leadership",
                        "type": "string"
                    },
                    "relationships": {
                        "items": {
                            "description": "Name of the relationship",
                            "title": "Relation",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "short_name": {
                        "description": "Short name of the group",
                        "title": "Short Name",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the group",
                        "enum": [
                            "Kingdom",
                            "Faction"
                        ],
                        "title": "Type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HTTPError": {
                "properties": {
                    "detail": {
                        "type": "object"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Intelligence": {
                "properties": {
                    "known_schemes": {
                        "items": {
                            "description": "Known scheme of the intelligence",
                            "title": "Known Scheme",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "level": {
                        "description": "Level of the intelligence",
                        "title": "Level",
                        "type": "string"
                    },
                    "schemes": {
                        "items": {
                            "description": "Scheme of the intelligence",
                            "title": "Scheme",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "KindomProperty": {
                "properties": {
                    "capital": {
                        "description": "Capital of the property",
                        "title": "Capital",
                        "type": "string"
                    },
                    "population": {
                        "description": "Population of the property",
                        "title": "Population",
                        "type": "integer"
                    },
                    "race": {
                        "description": "Race of the property",
                        "title": "Race",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Leader": {
                "properties": {
                    "faction": {
                        "description": "Faction of the leader",
                        "title": "Faction",
                        "type": "string"
                    },
                    "goals": {
                        "items": {
                            "description": "Goal of the leader",
                            "title": "Goal",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "kingdom": {
                        "description": "Kingdom of the leader",
                        "title": "Kingdom",
                        "type": "string"
                    },
                    "relationships": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Relationship"
                                }
                            ],
                            "description": "Information about a relationship in the leader",
                            "title": "Relationship"
                        },
                        "type": "object"
                    },
                    "traits": {
                        "items": {
                            "description": "Trait of the leader",
                            "title": "Trait",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LeaderUpdate": {
                "properties": {
                    "faction": {
                        "description": "Faction of the leader",
                        "title": "Faction",
                        "type": "string"
                    },
                    "goals": {
                        "items": {
                            "description": "Goal of the leader",
                            "title": "Goal",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "kingdom": {
                        "description": "Kingdom of the leader",
                        "title": "Kingdom",
                        "type": "string"
                    },
                    "relationships": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Relationship"
                                }
                            ],
                            "description": "Information about a relationship in the leader",
                            "title": "Relationship"
                        },
                        "type": "object"
                    },
                    "traits": {
                        "items": {
                            "description": "Trait of the leader",
                            "title": "Trait",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Magic": {
                "properties": {
                    "sources": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Magic_Source"
                                }
                            ],
                            "description": "Information about a source in the magic system",
                            "title": "Source"
                        },
                        "type": "object"
                    },
                    "uses": {
                        "description": "Comma separated list of magic uses",
                        "title": "Uses",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MagicUpdate": {
                "properties": {
                    "sources": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Magic_Source"
                                }
                            ],
                            "description": "Information about a source in the magic system",
                            "title": "Source"
                        },
                        "type": "object"
                    },
                    "uses": {
                        "description": "Comma separated list of magic uses",
                        "title": "Uses",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Magic_Source": {
                "properties": {
                    "description": {
                        "description": "Description of the source",
                        "title": "Description",
                        "type": "string"
                    },
                    "examples": {
                        "additionalProperties": {
                            "description": "Description of the spell",
                            "title": "Spell",
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "notes": {
                        "description": "Notes on the source",
                        "title": "Notes",
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "description": "List of rules for the magic source",
                            "title": "Rules",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "Type of the source",
                        "title": "Type",
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "description": "List of users for the magic source",
                            "title": "Users",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Pantheon": {
                "properties": {
                    "gods": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/God"
                                }
                            ],
                            "description": "Information about a god in the pantheon",
                            "title": "God"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PantheonUpdate": {
                "properties": {
                    "gods": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/God"
                                }
                            ],
                            "description": "Information about a god in the pantheon",
                            "title": "God"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Period": {
                "properties": {
                    "major_events": {
                        "items": {
                            "description": "Major event of the era",
                            "title": "Major Event",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "minor_events": {
                        "items": {
                            "description": "Minor event of the era",
                            "title": "Minor Event",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "period": {
                        "description": "Period of the era",
                        "title": "Period",
                        "type": "string"
                    },
                    "perspective": {
                        "additionalProperties": {
                            "description": "Perspective of the era",
                            "title": "Perspective",
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Relationship": {
                "properties": {
                    "intelligence": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Intelligence"
                            }
                        ],
                        "description": "Intelligence of the relationship",
                        "title": "Intelligence"
                    },
                    "reputation": {
                        "description": "Reputation of the relationship",
                        "title": "Reputation",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "detail": {
                        "properties": {
                            "<location>": {
                                "properties": {
                                    "<field_name>": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "World": {
                "properties": {
                    "geography": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Geography"
                            }
                        ],
                        "description": "Information about the geography of the world",
                        "title": "Geography"
                    },
                    "groups": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Group"
                                }
                            ],
                            "description": "Information about a kingdom in the world",
                            "title": "Group"
                        },
                        "type": "object"
                    },
                    "history": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Era"
                                }
                            ],
                            "description": "Information about an era in the world",
                            "title": "Era"
                        },
                        "type": "object"
                    },
                    "leaders": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Leader"
                                }
                            ],
                            "description": "Information about a leader in the world",
                            "title": "Leader"
                        },
                        "type": "object"
                    },
                    "magic": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Magic"
                            }
                        ],
                        "description": "Information about the magic system of the world",
                        "title": "Magic"
                    },
                    "pantheon": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Pantheon"
                            }
                        ],
                        "description": "Information about the pantheon of the world",
                        "title": "Pantheon"
                    },
                    "world_name": {
                        "description": "Name of the world",
                        "title": "World Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WorldUpdate": {
                "properties": {
                    "geography": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Geography"
                            }
                        ],
                        "description": "Information about the geography of the world",
                        "title": "Geography"
                    },
                    "groups": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Group"
                                }
                            ],
                            "description": "Information about a kingdom in the world",
                            "title": "Group"
                        },
                        "type": "object"
                    },
                    "history": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Era"
                                }
                            ],
                            "description": "Information about an era in the world",
                            "title": "Era"
                        },
                        "type": "object"
                    },
                    "leaders": {
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Leader"
                                }
                            ],
                            "description": "Information about a leader in the world",
                            "title": "Leader"
                        },
                        "type": "object"
                    },
                    "magic": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Magic"
                            }
                        ],
                        "description": "Information about the magic system of the world",
                        "title": "Magic"
                    },
                    "pantheon": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Pantheon"
                            }
                        ],
                        "description": "Information about the pantheon of the world",
                        "title": "Pantheon"
                    },
                    "world_name": {
                        "description": "Name of the world",
                        "title": "World Name",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "in": "header",
                "name": "X-API-KEY",
                "type": "apiKey"
            }
        }
    },
    "info": {
        "title": "Worldgen API",
        "version": "1.0.0"
    },
    "openapi": "3.0.3",
    "paths": {
        "/": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "summary": "Index"
            }
        },
        "/api/world/{world_name}": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_world",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/World"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "World not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Parameters:\n            world_name (str): The name of the world to patch the data for.\n            patch (dict): The patch to apply to the world.\n    \n        Returns:\n            dict: A JSON object containing the patched data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "patch_api_world",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorldUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/World"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "World not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of a specific world by its name."
            }
        },
        "/api/world/{world_name}/factions": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'groups' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'groups' category does not exist for the world.",
                "operationId": "patch_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'groups' category for a specific world."
            },
            "put": {
                "operationId": "put_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Groups"
            }
        },
        "/api/world/{world_name}/geography": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_geography",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Geography"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'geography' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'geography' category does not exist for the world.",
                "operationId": "patch_api_geography",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeographyUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Geography"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'leaders' category for a specific world."
            },
            "put": {
                "operationId": "put_api_geography",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Geography"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Geography"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Geography"
            }
        },
        "/api/world/{world_name}/groups": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'groups' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'groups' category does not exist for the world.",
                "operationId": "patch_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'groups' category for a specific world."
            },
            "put": {
                "operationId": "put_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Groups"
            }
        },
        "/api/world/{world_name}/history": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_history",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Era"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'history' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'history' category does not exist for the world.",
                "operationId": "patch_api_history",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EraUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Era"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'leaders' category for a specific world."
            },
            "put": {
                "operationId": "put_api_history",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Era"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Era"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_History"
            }
        },
        "/api/world/{world_name}/kingdoms": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'groups' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'groups' category does not exist for the world.",
                "operationId": "patch_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'groups' category for a specific world."
            },
            "put": {
                "operationId": "put_api_groups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Groups"
            }
        },
        "/api/world/{world_name}/leaders": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_leaders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leader"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'leaders' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'leaders' category does not exist for the world.",
                "operationId": "patch_api_leaders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaderUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leader"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'leaders' category for a specific world."
            },
            "put": {
                "operationId": "put_api_leaders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leader"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leader"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Leaders"
            }
        },
        "/api/world/{world_name}/magic": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_magic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Magic"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'magic' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'magic' category does not exist for the world.",
                "operationId": "patch_api_magic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MagicUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Magic"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'magic' category for a specific world."
            },
            "put": {
                "operationId": "put_api_magic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Magic"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Magic"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Magic"
            }
        },
        "/api/world/{world_name}/pantheon": {
            "get": {
                "description": "Parameters:\n            world_name (str): The name of the world to retrieve the data for.\n    \n        Returns:\n            dict: A JSON object containing the data of the specified world.\n    \n        Raises:\n            404: If the specified world does not exist.",
                "operationId": "get_api_pantheon",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pantheon"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "Retrieves the JSON data of a specific world by its name."
            },
            "patch": {
                "description": "Args:\n            world_name (str): The name of the world.\n\n        Returns:\n            None: If the 'pantheon' category exists for the world and the patch operation is successful.\n\n        Raises:\n            None: If the 'pantheon' category does not exist for the world.",
                "operationId": "patch_api_pantheon",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PantheonUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pantheon"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Patches the JSON data of the 'leaders' category for a specific world."
            },
            "put": {
                "operationId": "put_api_pantheon",
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pantheon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pantheon"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Validation error"
                    }
                },
                "summary": "Put API_Pantheon"
            }
        },
        "/world/{world_name}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "world_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Not found"
                    }
                },
                "summary": "World"
            }
        }
    },
    "servers": [
        {
            "url": "http://127.0.0.1:5000/"
        }
    ],
    "tags": []
}